# SPDX-FileCopyrightText: 2023 Univention GmbH
# SPDX-License-Identifier: AGPL-3.0-only
---
# The global properties are used to configure multiple charts at once.
global:
  imageRegistry: "artifacts.software-univention.de"
  # -- Credentials to fetch images from private registry
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  #
  imagePullSecrets: []
  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  # "IfNotPresent" => The image is pulled only if it is not already present locally.
  # "Always" => Every time the kubelet launches a container, the kubelet queries the container image registry to
  #             resolve the name to an image digest. If the kubelet has a container image with that exact digest cached
  #             locally, the kubelet uses its cached image; otherwise, the kubelet pulls the image with the resolved
  #             digest, and uses that image to launch the container.
  # "Never" => The kubelet does not try fetching the image. If the image is somehow already present locally, the
  #            kubelet attempts to start the container; otherwise, startup fails.
  imagePullPolicy: "IfNotPresent"

## Global values
# affinity: {}
# environment: {}
# fullnameOverride: ""
# nameOverride: ""
# nodeSelector: {}
# podAnnotations: {}
# podSecurityContext: {}
# replicaCount: 1
# securityContext: {}
# tolerations: []

# Container image configuration
image:
  # -- Container registry address. This setting has higher precedence than global.registry.
  registry: ""
  # -- The path to the container image.
  repository: "nubus-dev/images/testing-api"
  # -- The pull policy of the container image.  This setting has higher precedence than global.imagePullPolicy.
  imagePullPolicy: "IfNotPresent"
  # -- The tag of the container image. (This is replaced with an appropriate value during the build process of the Helm chart.)
  tag: 0.15.0
# -- Optionally specify a secret to create (primarily intended to be used in development environments to provide custom certificates)
extraEnvVars: []

# -- Optionally specify a secret to create (primarily intended to be used in development environments to provide custom certificates)
extraSecrets: []

testingApi:
  config:
    # -- Log level for the selfservice listener.
    # valid values are: ERROR WARNING, INFO, DEBUG
    logLevel: "INFO"

  # -- LDAP settings.
  ldap:
    # -- The LDAP base DN to use when connecting.
    baseDn: ""
    # -- LDAP server primary headless service connection parameters.
    primaryConnection:
      # -- LDAP host.
      host: ""
      # -- LDAP port.
      port: "389"
    # -- LDAP server secondary headless service connection parameters.
    secondaryConnection:
      # -- LDAP host.
      host: ""
      # -- LDAP port.
      port: "389"
    # -- LDAP authentication parameters.
    auth:
      # -- LDAP bind DN. (user to authenticate with LDAP server)
      bindDn: ""
      # -- LDAP bind password secret reference.
      credentialSecret:
        key: "password"
        name: ""
  nats:
    connection:
      host: null
    auth:
      username: admin
      # -- NATS admin password reference.
      credentialSecret:
        key: "admin_password"
        name: null

  ingress:
    host: null
    tls:
      enabled: true
      secretName: ""

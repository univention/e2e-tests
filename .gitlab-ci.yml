# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---
include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v1.32.0"
    file:
      - "defaults/stages.yaml"
      - "defaults/nubus-workflow.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/semantic-release-env.yaml"
      - "jobs/container-build.yaml"
      - "jobs/container-build-external.yaml"
      - "jobs/package-and-publish-helm-charts-external.yaml"
  - local: "/jobs/e2e-tests.yaml"

variables:
  RELEASE_NAME:
    description: "The helm deployment release name, valid values are: `nubus` and `ums`."
  DEPLOY_NAMESPACE:
    description: "The nubus deployment namespace in the Gaia cluster (other cluster are currently not supported.)"

.build-matrix: &build-matrix
  - IMAGE_NAME: "e2e-tests-runner"
    KANIKO_BUILD_CONTEXT: $CI_PROJECT_DIR
    DOCKERFILE_PATH: "Dockerfile"
  - IMAGE_NAME: "testing-api"
    KANIKO_BUILD_CONTEXT: $CI_PROJECT_DIR
    DOCKERFILE_PATH: "docker/testing-api/Dockerfile"

.publish-matrix: &publish-matrix
  - IMAGE_NAME:
    - "testing-api"

lint-pre-commit:
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
  rules: &rules-common
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

container-build:
  parallel:
    matrix: *build-matrix
  rules: *rules-common

push-image-external:
  parallel:
    matrix: *publish-matrix
  rules: *rules-common

container-sign-external:
  parallel:
    matrix: *publish-matrix
  rules:
    - when: never

container-generate-sbom:
  rules:
    - when: never

package-helm-charts:
  rules: *rules-common

publish-chart-external:
  rules: *rules-common

test-container:
  stage: "test"
  rules: *rules-common
  image: "${CI_REGISTRY_IMAGE}/e2e-tests-runner:${RELEASE_VERSION}"
  script:
    - pytest --fixtures

e2e-tests:
  image: "${CI_REGISTRY_IMAGE}/e2e-tests-runner:${RELEASE_VERSION}"
  variables:
    TESTRUNNER_VERSION: ${RELEASE_VERSION}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "api"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
